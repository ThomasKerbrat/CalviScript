program              -> (block | statement )* EOI
block                -> '{' (block | statement)* '}'
statement            -> (variableDeclaration | assign | expression) ';'

assign               -> iidentifier '=' expression
iidentifier          -> IDENTIFIER | variableDeclaration
variableDeclaration  -> 'var' IDENTIFIER

expression           -> mathExpression ('?' expression ':' expression)?
mathExpression       -> term (('+' | '-') term)*
term                 -> factor (('*' | '/' | '%') factor)*
factor               -> '-'? positiveFactor
positiveFactor       -> NUMBER | IDENTIFIER | ('(' expression ')')
